#version 330 core

in vec3 FragPos;
in vec3 Normal;
in vec2 TexCoords;

struct Light{
    vec3 dirction;
    vec3 ambient;
    vec3 diffuse;
    vec3 specular;
}

struct Material{
    sampler2D diffuse;
    sampler2D specular;
    float shininess;
}

uniform Light light;
uniform Material material;

void main(){
    vec3 color = vec(1.0);
    vec3 lightDir = normalize(-light.direction);
    vec3 norm = normalize(Normal);

    //ambient
    vec3 ambient = light.ambient*texture(material.diffuse,TexCoords).rgb;

    //diffuse
    float diff = max(dot(lightDir,normal),0.0);
    vec3 diffuse = diff * light.diffuse * texture(material.diffuse,TexCoords).rgb;

    //specular
    vec3 reflecDir = reflect(,)
    float spec = pow()

    gl_FragColor = vec4(color,1.0);
}
