#version 330 core
layout (location = 0) in vec3 vertices;
//layout (location = 1) in vec3 color;
//layout (location = 1) in vec2 texCoord;
layout (location = 1)in vec3 normal;

//out vec3 ourColor;
//out vec2 TexCoord;
out vec3 Normal;
out vec3 FragPos;


uniform mat4 model;
uniform mat4 view;
uniform mat4 projection;

void main() {
    //gl_Position =vec4(vertices.x,vertices.y,vertices.z,1.0);
    //coords = vertices.xy;

    gl_Position = projection*view*model*vec4(vertices,1.0);
    //gl_Position = projection*view*vec4(vertices,1.0);
    //ourColor = color;
    //TexCoord = vec2(texCoord.x,1.0-texCoord.y);
    Normal = mat3(transpose(inverse(model))) * normal;
    FragPos = vec3(model*vec4(vertices,1.0));
}
