#version 330 core

uniform vec3 objectColor;
uniform vec3 lightColor;
uniform vec3 lightPos;
uniform vec3 viewPos;

in vec3 FragPos;
in vec3 Normal;

void main(){
    vec3 color = vec3(1.0);

//ambient lighting
    float ambientStrength = 0.1;

//diffuse lighting
    vec3 normal = normalize(Normal);
    vec3 lightDir = normalize(lightPos-FragPos);
    float diff = max(dot(lightDir,normal),0.0);
//specular lighting
    vec3 viewDir = normalize(FragPos-viewPos);
    vec3 reflectDir = reflect(-lightDir,normal);
    float spec = pow(max(dot(viewDir,reflectDir),0.0),256);
    vec3 posColor =normalize(FragPos);
    color = (ambientStrength+diff+spec)*lightColor*objectColor;
    //color = (ambientStrength+diff+spec)*posColor;
    gl_FragColor = vec4(color,1.0);
}
